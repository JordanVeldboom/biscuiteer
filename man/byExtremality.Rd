% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/byExtremality.R
\name{byExtremality}
\alias{byExtremality}
\title{Choose loci or features by extremality}
\usage{
byExtremality(bsseq, r = NULL, k = 500)
}
\arguments{
\item{bsseq}{A bsseq object}

\item{r}{Regions to consider - NULL covers all loci (DEFAULT: NULL)}

\item{k}{How many rows/regions to return (DEFAULT: 500)}
}
\value{
\preformatted{  A matrix-like object with methylation values sorted by
          extremality
}
}
\description{
This function finds the k most extremal features (features above a certain
fraction of the Bernoulli variance) in 'bsseq' and returns their values.
}
\details{
For DNA methylation, particularly when summarized across regions, we can do
better (a lot better) than MAD. Since we know:
max(SD(X_j)) if X_j ~ Beta(a, b) < max(SD(X_j)) if X_j ~ Bernoulli(a/(a+b))
for X with a known mean and standard deviation (SD), then we can solve for
(a+b) by MoM. We can then define the extremality by:
extremality = sd(X_j) / bernoulliSD(mean(X_j))
}
\examples{

  tcga_mrg <- system.file("extdata",
                          "TCGA_BLCA_A13J_chr11p15_unmerged.bed.gz",
                          package = "biscuiteer")
  tcga_shf <- system.file("extdata",
                          "TCGA_BLCA_A13J_chr11p15_shuffled_unmerged.bed.gz",
                          package = "biscuiteer")
  tcga_mvcf <- system.file("extdata",
                           "TCGA_BLCA_A13J_header_only.vcf.gz",
                           package = "biscuiteer")
  tcga_svcf <- system.file("extdata",
                           "TCGA_BLCA_A13J_shuffled_header_only.vcf.gz",
                           package = "biscuiteer")
  bisc1 <- read.biscuit(BEDfile = tcga_mrg, VCFfile = tcga_mvcf,
                        merged = FALSE, genome = "hg38")
  bisc2 <- read.biscuit(BEDfile = tcga_shf, VCFfile = tcga_svcf,
                        merged = FALSE, genome = "hg38")

  reg <- GRanges(seqnames = rep("chr11",5),
                 strand = rep("*",5),
                 ranges = IRanges(start = c(0,2.8e6,1.17e7,1.38e7,1.69e7),
                                  end= c(2.8e6,1.17e7,1.38e7,1.69e7,2.2e7))
                 )

  comb <- unionize(bisc1, bisc2)

  ext <- byExtremality(comb, r = reg)

}
