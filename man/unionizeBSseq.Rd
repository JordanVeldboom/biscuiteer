% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unionizeBSseq.R
\name{unionizeBSseq}
\alias{unionizeBSseq}
\title{Combine two bsseq objects together}
\usage{
unionizeBSseq(bs1, bs2, biggrl, what = c("M", "Cov"))
}
\arguments{
\item{bs1}{bsseq object number 1}

\item{bs2}{bsseq object number 2}

\item{biggrl}{A GRangesList with (bs1-only, both, and bs2-only) regions}

\item{what}{"M" (methylation) or "Cov" (coverage)}
}
\value{
\preformatted{   A Matrix
}
}
\description{
Takes two bsseq objects and the overlaps of the union of their rowRanges,
fills the sites not in the union with 0M/0Cov (or ./. in a sparse Matrix),
then returns a Matrix containing the joint information from both objects.
}
\examples{

  tcga_mrg <- system.file("extdata",
                          "TCGA_BLCA_A13J_chr11p15_unmerged.bed.gz",
                          package = "biscuiteer")
  tcga_shf <- system.file("extdata",
                          "TCGA_BLCA_A13J_chr11p15_shuffled_unmerged.bed.gz",
                          package = "biscuiteer")
  tcga_vcf <- system.file("extdata", "TCGA_BLCA_A13J_header_only.vcf.gz",
                          package = "biscuiteer")
  bisc1 <- read.biscuit(BEDfile = tcga_mrg, VCFfile = tcga_vcf,
                        merged = FALSE, genome = "hg38")
  bisc2 <- read.biscuit(BEDfile = tcga_shf, VCFfile = tcga_vcf,
                        merged = FALSE, genome = "hg38")

  grl <- GRangesList(
           bs1 = GenomicRanges::setdiff(granges(bisc1), granges(bisc2)),
           bss = GenomicRanges::intersect(granges(bisc1), granges(bisc2)),
           bs2 = GenomicRanges::setdiff(granges(bisc2), granges(bisc1))
         )

  M <- unionizeBSseq(bisc1, bisc2, grl, what="M")
  #Cov <- unionizeBSseq(bisc1, bisc2, grl, what="Cov")

}
\seealso{
unionize
}
